# Schema for meeting-detail DDB Table
type MeetingDetail @aws_cognito_user_pools @aws_iam {
  meeting_id: String!
  attendees: [Attendee]
  create_date_time: AWSDateTime
  end_date_time: AWSDateTime
  call_id: String
  external_meeting_id: String
  meeting_status: String
}

type Attendee @aws_cognito_user_pools @aws_iam {
  phone_number: String
  attendee_id: String
  attendee_type: AttendeeType
  attendee_join_type: AttendeeJoinType
}

enum AttendeeJoinType {
    PSTN,
    DATA,
}

enum AttendeeType {
    FIRST_RESPONDER,
    SPECIALIST,
    SERVICE_DESK,
    NOT_SPECIFIED,
}

type MeetingDetailConnection @aws_cognito_user_pools @aws_iam {
  items: [MeetingDetail]
  nextToken: String
}

input AttendeeInput {
  phone_number: String
  attendee_id: String
  attendee_type: AttendeeType
  attendee_join_type: AttendeeJoinType
}

# [input] MeetingDetailInput
# CreateMeetingDetail, DeleteMeetingDetail and UpdateMeetingDetail use this input type
input MeetingDetailInput {
  meeting_id: String!
  attendees: [AttendeeInput]
  create_date_time: AWSDateTime
  end_date_time: AWSDateTime
  call_id: String
  external_meeting_id: String
  meeting_status: String
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
}

input ModelMeetingDetailFilterInput {
  meeting_id: ModelStringInput
  attendees: ModelStringInput
  create_date_time: ModelStringInput
  end_date_time: AWSDateTime
  call_id: ModelStringInput
  external_meeting_id: ModelStringInput
  meeting_status: ModelStringInput
  and: [ModelMeetingDetailFilterInput]
  or: [ModelMeetingDetailFilterInput]
  not: ModelMeetingDetailFilterInput
}

input ModelMeetingDetailConditionInput {
  attendees: ModelStringInput
  create_date_time: ModelStringInput
  end_date_time: AWSDateTime
  call_id: ModelStringInput
  external_meeting_id: ModelStringInput
  meeting_status: ModelStringInput
  and: [ModelMeetingDetailConditionInput]
  or: [ModelMeetingDetailConditionInput]
  not: ModelMeetingDetailConditionInput
}

# [type] Query
type Query @aws_cognito_user_pools @aws_iam {
    getMeetingDetail(meetingId: String!): MeetingDetail
    listMeetingDetails(filter: ModelMeetingDetailFilterInput, limit: Int, nextToken: String): MeetingDetailConnection
    getMeetingDetailsByStatus(meetingStatus: String!, limit: Int, nextToken: String): MeetingDetailConnection
    getMeetingDetailsByStatusAndCreateTime(meetingStatus: String!, startTime: String!, endTime: String!, limit: Int, nextToken: String): MeetingDetailConnection
}

# [type] Mutation
type Mutation @aws_cognito_user_pools @aws_iam {
    createMeetingDetail(input: MeetingDetailInput, condition: ModelMeetingDetailConditionInput): MeetingDetail
    updateMeetingDetail(input: MeetingDetailInput, condition: ModelMeetingDetailConditionInput): MeetingDetail
    deleteMeetingDetail(input: MeetingDetailInput, condition: ModelMeetingDetailConditionInput): MeetingDetail
    publishMeetingDetailUpdates(meetingDetail: MeetingDetailInput!): MeetingDetail
}

# [type] Subscription
type Subscription @aws_cognito_user_pools @aws_iam {
    onCreateMeetingDetail: MeetingDetail @aws_subscribe(mutations: ["createMeetingDetail", "publishMeetingDetailUpdates"])
    onUpdateMeetingDetail: MeetingDetail @aws_subscribe(mutations: ["updateMeetingDetail", "publishMeetingDetailUpdates"])
    onDeleteMeetingDetail: MeetingDetail @aws_subscribe(mutations: ["deleteMeetingDetail"])
}